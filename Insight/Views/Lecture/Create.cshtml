@model Insight.Data.Lecture
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<link rel="import" href="~/Components/paper-date-picker-master/paper-date-picker-dialog.html">
@using (Html.BeginForm("Create", "Lecture", FormMethod.Post, new { @role = "form", @name = "createLecture" }))
{
    @Html.AntiForgeryToken()
    <br/>
    <paper-material elevation="3" class="smooth wider paperMaterial">
        <div class="row" style="text-align:center">
            <h2>Schedule New Lecture</h2>
            <hr />
        </div>
        <div class="row button-pad">
            @if(Model.ModuleCode != null){
                <paper-input name="ModuleCode" id="ModuleCode" label="Module Code" value="@Model.ModuleCode"></paper-input> @Html.ValidationMessageFor(model => model.ModuleCode, "", new { @class = "text-danger" })
            }else{
                <paper-input name="ModuleCode" id="ModuleCode" label="Module Code"></paper-input> @Html.ValidationMessageFor(model => model.ModuleCode, "", new { @class = "text-danger" })
            }
            <br />
            @if(Model.VenueCode != null){
                <paper-input name="VenueCode" id="VenueCode" label="Venue Code" value="@Model.VenueCode"></paper-input> @Html.ValidationMessageFor(model => model.VenueCode, "", new { @class = "text-danger" })
            }else{
                <paper-input name="VenueCode" id="VenueCode" label="Venue Code"></paper-input> @Html.ValidationMessageFor(model => model.VenueCode, "", new { @class = "text-danger" })
            }
            <br />
            @if(Model.StaffNumber != null){
                <paper-input name="StaffNumber" id="StaffNumber" label="Staff Number" value="@Model.StaffNumber"></paper-input> @Html.ValidationMessageFor(model => model.StaffNumber, "", new { @class = "text-danger" })
            }else{
                <paper-input name="StaffNumber" id="StaffNumber" label="Staff Number"></paper-input> @Html.ValidationMessageFor(model => model.StaffNumber, "", new { @class = "text-danger" })
            }
        </div>
        <br />
        <div class="row">
            <div class="pad-me">
                <template is="dom-bind" id="dateScope">
                    <section>
                        
                        <paper-button class="btn" on-tap="showDialog" raised>Change Day</paper-button>
                        <paper-dialog id="dialog" class="paper-date-picker-dialog" modal on-iron-overlay-closed="dismissDialog">
                            <paper-date-picker id="picker" responsive-width="655px"></paper-date-picker>
                            <div class="buttons">
                                <paper-button dialog-dismiss>Cancel</paper-button>
                                <paper-button dialog-confirm>OK</paper-button>
                            </div>
                        </paper-dialog>
                        <label style="font-size:22px" id="dateHold" name="dateHold">{{dateFormat(date, 'dddd')}}</label>
                        <input type="hidden" name="dateHoldhidden" id="dateHoldhidden" />
                    </section>
                </template>
            </div> 
        </div>
        <br />
        <div class="row">
            <div class="pad-me">
                <template is="dom-bind" id="scope">
                    <section>
                        <paper-button class="btn" on-tap="showDialog" raised>Start Time</paper-button>
                        <paper-dialog id="dialog" class="paper-time-picker-dialog" modal>
                            <paper-time-picker id="picker" time=""></paper-time-picker>
                            <div class="buttons">
                                <paper-button dialog-dismiss>CANCEL</paper-button>
                                <paper-button dialog-confirm on-tap="timeSelected">OK</paper-button>
                            </div>
                        </paper-dialog>

                        <label style="font-size:22px" id="timeHold" name="timeHold">{{time}}</label>
                        <input type="hidden" name="timeHoldhidden" id="timeHoldhidden" />
                    </section>
                </template>
            </div>
        </div>
        <br />
        <div class="row">
            <hr />
            <div class="button-pad">
                <paper-button raised class="accept-button pull-left" onclick="history.go(-1);">Back</paper-button>
                <paper-button raised class="accept-button pull-right" onclick="document.createLecture.submit();">Create</paper-button>
            </div>
        </div>
        <br />
    </paper-material>
    
    
 <script>
    document.addEventListener('DOMContentLoaded', function() {
        var scope = document.querySelector('#scope');
        var hc = scope.$.picker.time;
        var xyc = "kjv0";
      scope.timeSelected = function() {
          scope.time = scope.$.picker.time;
          hc = scope.$.picker.time;
          document.getElementById('timeHold').innerHTML = hc;
          document.getElementById('timeHoldhidden').value = hc;
      };
      scope.showDialog = function() {
        this.$.dialog.toggle();
      };
      document.getElementById('timeHold').innerHTML = hc;
    });
  </script> 
 

 <script>
    document.addEventListener('WebComponentsReady', function() {
      var scope = Polymer.dom(document).querySelector('#dateScope');
      scope.dateFormat = scope.$.picker.dateFormat;
      scope.dismissDialog = function(event) {
        if (event.detail.confirmed) {
            scope.date = scope.$.picker.date;
            scope.time = scope.$.picker.time = document.getElementById('timeHoldhidden').value;
            dataDate = scope.$.picker.date;
            document.getElementById('dateHoldhidden').value = dataDate
        }
      };
      scope.showDialog = function() {
        this.$.dialog.toggle();
      };
      scope.date = new Date('dddd');
    });

  </script>
}

